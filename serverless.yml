service: crawler
app: crawler
org: fpvrodeo

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-1
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:PutObject"
        - "s3:GetObject"
      Resource:
        Fn::Join:
          - ''
          - - Fn::GetAtt:
              - "ScraperBucket"
              - "Arn"
            - '/*'
    - Effect: "Allow"
      Action:
        - "sqs:DeleteMessage"
        - "sqs:DeleteMessageBatch"
        - "sqs:SendMessageBatch"
        - "sqs:ReceiveMessage"
        - "sqs:SendMessage"
      Resource:
        Fn::GetAtt:
          - "HobbyRcQueue"
          - "Arn"

functions:
  hobbyscrape:
    handler: scraper.hobbyRcScrape
    memorySize: 256
    timeout: 900
    reservedConcurrency: 1
    events:
      - sqs:
          batchSize: 1
          arn:
            Fn::GetAtt:
              - "HobbyRcQueue"
              - "Arn"
    environment:
      SCRAPER_BUCKET:
        Ref: ScraperBucket
  hobbycrawl:
    handler: crawler.hobbyRcCrawl
    memorySize: 256
    timeout: 900
    environment:
      HOBBYRC_QUEUE:
        Ref: HobbyRcQueue

resources:
  Resources:
    ScraperBucket:
      Type: "AWS::S3::Bucket"
      Properties:
        BucketName:
          Fn::Join:
            - ''
            - - 'fpv-rodeo-scraper-'
              - !Ref 'AWS::AccountId'
        PublicAccessBlockConfiguration:
          BlockPublicAcls: 'true'
          BlockPublicPolicy: 'true'
          IgnorePublicAcls: 'true'
          RestrictPublicBuckets: 'true'
    HobbyRcQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: "HobbyRC-${opt:stage, self:provider.stage, 'dev'}"
        VisibilityTimeout: 900
        RedrivePolicy:
          maxReceiveCount: "5"
          deadLetterTargetArn:
            Fn::GetAtt:
              - "HobbyRcDLQ"
              - "Arn"
    HobbyRcDLQ:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: "HobbyRC-${opt:stage, self:provider.stage, 'dev'}-DLQ"
  Outputs:
    HobbyRCQueueUrl:
      Description: "HobbyRC Queue URL"
      Value:
        Ref: "HobbyRcQueue"
